---

- name: Create Initial Configuration
  hosts: "{{ api_origin }}"
  gather_facts: False
  vars_files:
    - answerfile.yml
  environment:
    http_proxy: ''
    https_proxy: ''
  tasks:
    - name: Create Transport Zone - Overlay
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/transport-zones
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"display_name\": \"{{ transportZoneNameOverlay }}\", \"host_switch_name\":\"{{ hostSwitchNameOverlay }}\", \"description\": \" Created by Ansible\", \"transport_type\":\"{{ tzTypeOverlay }}\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: tzoneOverlay

    - name: Create Transport Zone - VLAN
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/transport-zones
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"display_name\": \"{{ transportZoneNameVLAN }}\", \"host_switch_name\":\"{{ hostSwitchNameVLAN }}\", \"description\": \" Created by Ansible\", \"transport_type\":\"{{ tzTypeVLAN }}\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: tzoneVLAN


    - name: Create VTEP IP Pool
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/pools/ip-pools
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"display_name\": \"{{ ippool.name }}\", \"description\": \" Created by Ansible\", \"subnets\": [ { \"allocation_ranges\": [ { \"start\": \"{{ ippool.start }}\", \"end\": \"{{ ippool.end }}\" }   ],\"gateway_ip\": \"{{ ippool.gw }}\", \"cidr\": \"{{ ippool.cidr }}\"  }  ]  }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: ippool

    - name: Create Unique Edge Uplink Hostswitch Profile for Overlay and VLAN
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/host-switch-profiles
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"resource_type\" : \"UplinkHostSwitchProfile\", \"description\" : \"Created by Ansible to assign this hostswitch profile to the Edge for overlay\", \"display_name\" : \"nsx-edge-uplink-hostswitch-profile\", \"transport_vlan\" : \"{{ transport_vlan }}\", \"teaming\" : { \"active_list\" : [ { \"uplink_type\" : \"PNIC\", \"uplink_name\" : \"uplink-1\" } ], \"standby_list\" : [ ], \"policy\" : \"FAILOVER_ORDER\" }, \"mtu\" : 1600 } "
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: hsprofile

    - name: Get Edge node UUID
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/fabric/nodes
        method: GET
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        force_basic_auth: yes
        validate_certs: no
        status_code: 200
        body_format: json
        use_proxy: no
      register: edgeuuid

    - name: Create Transport Node from Edge
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/transport-nodes
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"description\" : \"Edge Transport Node created by Ansible\", \"display_name\" : \"{{ nodes.nsxEdge.hostname }}\", \"node_id\" : \"{{ edgeuuid.json.results[0].id }}\", \"transport_zone_endpoints\" : [ { \"transport_zone_id\" : \"{{ tzoneOverlay.json.id }}\" } , { \"transport_zone_id\" : \"{{ tzoneVLAN.json.id }}\" } ], \"host_switches\" : [ { \"host_switch_profile_ids\" : [ { \"value\" : \"{{ hsprofile.json.id }}\", \"key\" : \"UplinkHostSwitchProfile\" } ], \"host_switch_name\" : \"{{ hostSwitchNameOverlay }}\", \"pnics\" : [ { \"device_name\" : \"fp-eth0\", \"uplink_name\" : \"uplink-1\" } ], \"static_ip_pool_id\" : \"{{ ippool.json.id }}\" } , { \"host_switch_profile_ids\" : [ { \"value\" : \"{{ hsprofile.json.id }}\", \"key\" : \"UplinkHostSwitchProfile\" } ], \"host_switch_name\" : \"{{ hostSwitchNameVLAN }}\", \"pnics\" : [ { \"device_name\" : \"fp-eth1\", \"uplink_name\" : \"uplink-1\" } ]  } ] } "
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: tnode

    - name: Create Edge Cluster
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/edge-clusters
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"cluster_profile_bindings\": [], \"members\": [ { \"transport_node_id\":\"{{ tnode.json.id}}\" } ], \"display_name\": \"EdgeCluster1\", \"description\":\"Created by Ansible\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: edgecluster

    - name: Get Edge Cluster ID
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/edge-clusters
        method: GET
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        force_basic_auth: yes
        validate_certs: no
        status_code: 200
        body_format: json
        use_proxy: no
      register: edgecl

    - name: Create T0 Router
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/logical-routers
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"description\": \"Default T0 Router created by Ansible!!!\", \"display_name\": \"{{ t0.name }}\", \"edge_cluster_id\": \"{{ edgecl.json.results[0].id }}\", \"router_type\": \"TIER0\", \"high_availability_mode\": \"{{ t0.ha }}\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: T0Router


    - name: Create Edge Uplink LS
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/logical-switches
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"transport_zone_id\": \"{{ tzoneVLAN.json.id }}\", \"replication_mode\": \"MTEP\", \"admin_state\": \"UP\", \"display_name\": \"{{ t0.EdgeUplinkLS }}\" , \"vlan\": \"0\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: Edge_Uplink_LS_Res


    - name: Create Logical Port on Edge Uplink LS to Connect to T0 Router
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/logical-ports
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"display_name\": \"LP-Connect-T0\", \"logical_switch_id\": \"{{ Edge_Uplink_LS_Res.json.id }}\", \"admin_state\": \"UP\" }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: Edge_Uplink_LS_LP




    - name: Create T0 Uplink Router Port
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/logical-router-ports
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"display_name\": \"T0 Uplink Routed Port\", \"resource_type\": \"LogicalRouterUpLinkPort\", \"logical_router_id\": \"{{ T0Router.json.id }}\", \"linked_logical_switch_port_id\": { \"target_type\": \"LogicalPort\" , \"target_id\": \"{{ Edge_Uplink_LS_LP.json.id }}\" } , \"edge_cluster_member_index\": [0] , \"subnets\": [ { \"ip_addresses\": [ \"{{ t0.UplinkIP }}\" ] , \"prefix_length\": \"{{ t0.UplinkPrefixLength}}\" } ] }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no
      register: T0Router_Uplink_RP


    - name: T0 Default Static Route
      run_once: true
      uri:
        url: https://{{ nodes.nsxMan.ipAddress }}/api/v1/logical-routers/{{ T0Router.json.id }}/routing/static-routes
        method: POST
        user: admin
        password: "{{ nsxAdminPass }}"
        HEADER_Content-Type: "application/json"
        body: "{ \"resource_type\": \"StaticRoute\", \"network\": \"0.0.0.0/0\", \"next_hops\": [ { \"administrative_distance\" : \"1\" , \"ip_address\":  \"{{ t0.UplinkDefaultGW }}\" } ] }"
        force_basic_auth: yes
        validate_certs: no
        status_code: 201
        body_format: json
        use_proxy: no

